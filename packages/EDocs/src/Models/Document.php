<?php

namespace Encoda\EDocs\Models;

use Encoda\Core\Models\Model;
use Encoda\Core\Traits\HasUID;
use Encoda\Identity\Models\Database\User;
use Encoda\MultiTenancy\Traits\MultiTenancyModel;
use Illuminate\Database\Eloquent\Casts\Attribute;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\MorphTo;
use Illuminate\Support\Facades\Date;
use Illuminate\Support\Facades\Storage;

/**
 *
 */
class Document extends Model
{
    use MultiTenancyModel, HasUID;

    /**
     * @var string
     */
    protected $table = 'documents';

    /**
     * @var string[]
     */
    protected $guarded = ['id'];

    /**
     * @var string[]
     */
    protected $hidden = ['id', 'model_type', 'model_id'];

    /**
     * @var string[]
     */
    protected $appends= ['url'];


    /**
     * @return BelongsTo
     */
    public function user()
    {
        return $this->belongsTo(User::class);
    }

    /**
     * @return MorphTo
     */
    public function model(): MorphTo
    {
        return $this->morphTo();
    }

    public function url(): Attribute
    {
        return Attribute::make(
            get: static fn ($value, $attributes) => Storage::temporaryUrl(
                $attributes['path'], Date::now()->addMinutes(config('filesystems.temporary_url_ttl'))
            )
        );
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::deleting(static function ($model){
            Storage::delete($model->path);
        });
    }

}
